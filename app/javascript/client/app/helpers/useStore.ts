import { useMemo } from "react"
import { DiskStorage, MemoryStorage, RootStore, CookiesStorage } from "@detox/store"
import OS from '@detox/shared/os'

/**
 * Initialize RootStore, with proper storage depending if context is server rendering or frontend mobile/web app
 * @param dataToHydrate - store data generated by withSsrStore helper
 */
export function useStore(dataToHydrate = {}, initialCookiesProps = null, forceMemory = false) {
  if (OS === "server") {
    const cookies = new CookiesStorage()
    cookies.hydrate(initialCookiesProps)
    const store = new RootStore(new MemoryStorage(), cookies)
    store.hydrate(dataToHydrate)
    store.setup()
    return store
  } else {
    return useMemo(() => {
      const cookies = new CookiesStorage()
      cookies.hydrate(initialCookiesProps)
      const store = new RootStore(forceMemory ? new MemoryStorage() : new DiskStorage(), cookies)
      store.hydrate(dataToHydrate)
      return store
    }, [dataToHydrate])
  }
}
